@model IEnumerable<DeliveryManager.Models.Entity.Order>

<h2>Все заказы</h2>

<!-- Форма для добавления нового заказа -->
<form id="createOrderForm" asp-action="Create" method="post" onsubmit="return validateAndReplace()">
    <div class="form-group">
        <label for="Weight">Вес (кг):</label>
        <input type="text" class="form-control" id="Weight" name="Weight" required oninput="replaceDotWithComma()" />
    </div>
    <div class="form-group">
        <label for="CityDistrict">Район:</label>
        <input type="text" class="form-control" id="CityDistrict" name="CityDistrict" required />
    </div>
    <div class="form-group">
        <label for="DeliveryTime">Время доставки:</label>
        <input type="datetime-local" class="form-control" id="DeliveryTime" name="DeliveryTime" required />
    </div>
    <button type="submit" class="btn btn-primary">Создать заказ</button>
</form>

<script>
    // Функция замены точки на запятую при вводе данных
    function replaceDotWithComma() {
        const weightField = document.getElementById("Weight");
        weightField.value = weightField.value.replace(".", ",");
    }

    // Проверка и замена перед отправкой
    function validateAndReplace() {
        replaceDotWithComma(); // Выполняем замену точки на запятую

        const weight = document.getElementById("Weight").value;
        const weightRegex = /^[0-9]+(,)?[0-9]*$/; // Поддержка запятой для дробной части

        if (!weightRegex.test(weight) || parseFloat(weight.replace(",", ".")) < 0.01 || parseFloat(weight.replace(",", ".")) > 1000) {
            alert("Вес должен быть числом в диапазоне от 0.1 до 1000 кг. Допускается использование запятой для дробной части.");
            return false;
        }

        const cityDistrict = document.getElementById("CityDistrict").value;
        if (cityDistrict.length > 100) {
            alert("Название района не должно превышать 100 символов.");
            return false;
        }

        const deliveryTime = document.getElementById("DeliveryTime").value;
        if (!deliveryTime) {
            alert("Пожалуйста, укажите корректное время доставки.");
            return false;
        }

        // Все проверки пройдены, разрешаем отправку формы
        return true;
    }
</script>

<!-- Таблица всех заказов -->
<table class="table">
    <thead>
        <tr>
            <th>Номер заказа</th>
            <th>Вес (кг)</th>
            <th>Район</th>
            <th>Время доставки</th>
            <th>Дата создания</th>
            <th>Действия</th>
        </tr>
    </thead>
    <tbody>
        @if (Model != null)
        {
            @foreach (var order in Model)
            {
                <tr>
                    <td>@order.OrderId</td>
                    <td>@order.Weight</td>
                    <td>@order.CityDistrict</td>
                    <td>@order.DeliveryTime</td>
                    <td>@order.CreatedAt</td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@order.OrderId" class="btn btn-warning btn-sm">Редактировать</a>
                        <a asp-action="Delete" asp-route-id="@order.OrderId" class="btn btn-danger btn-sm" onclick="return confirm('Вы уверены, что хотите удалить заказ?');">Удалить</a>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>
